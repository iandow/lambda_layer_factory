AWSTemplateFormatVersion: "2010-09-09"
Description: (SO0042-workflow) Media Analysis Solution - The AWS CloudFormation template that provisions the Media Analysis Solution test operations resources using Amazon Elasticsearch.

Mappings:
    SourceCode:
        General:
            S3Bucket: '%%BUCKET_NAME%%'
            KeyPrefix: "media-analysis-solution/%%VERSION%%"

Resources:
  
  # Service - IAM

  TestExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        -
          PolicyName: !Sub "${AWS::StackName}-test-execution-lambda-role"
          PolicyDocument:
            Statement:
              -
                Effect: Allow
                Action:
                  - states:StartExecution
                Resource:
                  - !Join ["", ["arn:aws:states:", Ref: "AWS::Region", ":", Ref: "AWS::AccountId", ":stateMachine:", Ref: "AWS::StackName","-*"]]
              -
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Join ["", ["arn:aws:logs:", Ref: "AWS::Region", ":", Ref: "AWS::AccountId", ":log-group:/aws/lambda/*"]]
  # Services - Lambda

  TestVideoOperationLambda:
    Properties:
      FunctionName: !Sub "${AWS::StackName}-test-video"
      Environment:
        Variables:
          Status: "Complete"
      Handler: test.video_test_lambda
      Code:
        S3Bucket: !Join ["-", [!FindInMap ["SourceCode", "General", "S3Bucket"], Ref: "AWS::Region"]]
        S3Key: !Join ["/", [!FindInMap ["SourceCode", "General", "KeyPrefix"],  "test_operations.zip"]]
      MemorySize: 256
      Role:
        Fn::GetAtt:
        - TestExecutionRole
        - Arn
      Runtime: python3.6
      Timeout: 900
    Type: AWS::Lambda::Function 

# IAM Roles:
  StepFunctionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: "sts:AssumeRole"
            Effect: "Allow"
            Principal:
              Service: "states.amazonaws.com"
      Policies:
        - PolicyName: "TestSFNLambdaAccess"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action: "lambda:InvokeFunction"
                Resource: "arn:aws:lambda:*:*:function:*"
                Effect: "Allow"

  
# Step function

  TestStepFunction:
    Type: "AWS::StepFunctions::StateMachine"
    Properties:
      StateMachineName: "TestOperationStateMachine"
      DefinitionString: !Sub |-
        {
          "StartAt": "Is Type?",
          "States": {
            "Is Type?": {
              "Type": "Choice",
              "Choices": [{
                "Variable": "$.configuration.test-operation.mediaType",
                "StringEquals": "video",
                "Next": "Test Enabled?"
              }],
              "Default": "Test Not Started"
            },

            "Test Enabled?": {
              "Type": "Choice",
              "Choices": [{
                "Variable": "$.configuration.test-operation.enabled",
                "BooleanEquals": true,
                "Next": "Start Test"
              }],
              "Default": "Test Not Started"
            },

            "Test Not Started": {
              "Type": "Succeed"
            },

            "Start Test": {
              "Type": "Task",
              "Resource": "${TestVideoOperationLambda.Arn}",
              "End": true
            }
            
          }
        }
      RoleArn: !GetAtt "StepFunctionRole.Arn"

