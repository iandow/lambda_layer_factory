AWSTemplateFormatVersion: '2010-09-09'

Mappings:
    SourceCode:
        General:
            S3Bucket: 'ianwow'

Resources:

  # IAM Roles

  rekognitionRole:
    Type: "AWS::IAM::Role"
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonSNSFullAccess
        - arn:aws:iam::aws:policy/AmazonRekognitionFullAccess
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
            - "sts:AssumeRole"
            Effect: "Allow"
            Principal:
              Service: "lambda.amazonaws.com"
      Policies:
        - PolicyName: "pass-role-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - iam:PassRole
                Resource: "*"
                Effect: "Allow"
        - PolicyName: "RekognitionSNSPublishPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - sns:Publish
                Resource: !Ref "snsRekognitionTopic"
                Effect: "Allow"


  snsRekognitionTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      DisplayName: "SNS Role for Rekognition"
      TopicName: "iantest01"

  # Lambda Functions:
  rekognitionFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Handler: "start_rekognition.lambda_handler"
      Role: !GetAtt "rekognitionRole.Arn"
      Code:
        S3Bucket: !FindInMap ["SourceCode", "General", "S3Bucket"]
        S3Key: "start_rekognition.zip"
      Runtime: "python3.7"
      Environment:
        Variables:
          "REKOGNITION_SNS_TOPIC_ARN": !Ref "snsRekognitionTopic"
          "REKOGNITION_ROLE_ARN": !GetAtt "rekognitionRole.Arn"
